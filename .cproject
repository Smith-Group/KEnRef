<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1569037740">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1569037740" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1569037740" name="Debug" optionalBuildProperties="org.eclipse.cdt.docker.launcher.containerbuild.property.selectedvolumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.volumes=" parent="cdt.managedbuild.config.llvm.clang.linux.exe.debug">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.debug.1569037740." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug.2090316766" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.debug">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug.730446151" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.debug"/>
							<builder buildPath="${workspace_loc:/ker-cpp}/Debug" id="org.eclipse.cdt.build.core.internal.builder.679130684" keepEnvironmentInBuildfile="false" name="CDT Internal Builder" superClass="org.eclipse.cdt.build.core.internal.builder"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug.60783857" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.debug"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.670972692" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug.102502588" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.448224540" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1189487553" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std.266366460" name="Language standard" superClass="cdt.managedbuild.tool.llvm.c.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.c.compiler.dialect.default" valueType="enumerated"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.6265123" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool command="mpic++" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug.1815112773" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.debug">
								<option id="llvm.c_cpp.compiler.option.optimization.level.2051529463" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.none" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1468563172" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.max" valueType="enumerated"/>
								<option id="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std.498111654" name="Language standard" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.option.dialect.std" useByScannerDiscovery="true" value="gnu.cpp.compiler.dialect.c++17" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.preprocessor.def.376041937" name="Defined symbols (-D)" superClass="llvm.c_cpp.compiler.option.preprocessor.def" useByScannerDiscovery="false" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="GMX_DOUBLE=0"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.1376465104" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="/smithlab/opt/openmpi/414-clang1301/include"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src/gromacs/utility/include}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Debug@eclipse/src/include}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src/programs}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src/gromacs/gmxlib}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src/include}&quot;"/>
									<listOptionValue builtIn="false" value="/usr/local/gromacs-dev/include"/>
									<listOptionValue builtIn="false" value="/smithlab/opt/eigen/3.4.0/include/eigen3/"/>
									<listOptionValue builtIn="false" value="/smithlab/opt/eigen/3.4.0/include/eigen3/unsupported"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src/gromacs/mdtypes}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src/gromacs/math/include}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/KENRef/borrowedimports}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/Gromacs-Source@gromacs/src/external/thread_mpi/include}-&quot;"/>
								</option>
								<option id="llvm.c_cpp.compiler.option.misc.other.142813628" name="Other flags" superClass="llvm.c_cpp.compiler.option.misc.other" useByScannerDiscovery="false" value="-c -fmessage-length=0 -fopenmp=libomp" valueType="string"/>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.1028336794" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug.249705198" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1356276440" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool command="mpic++" id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug.943972804" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.debug">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.1165876694" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.paths.961405540" name="Library search path (-L)" superClass="llvm.c.link.option.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/local/gromacs-dev/lib64"/>
									<listOptionValue builtIn="false" value="/smithlab/opt/openmpi/414-clang1301/lib"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c.link.option.libs.1886548805" name="Libraries (-l)" superClass="llvm.c.link.option.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="gromacs_mpi"/>
									<listOptionValue builtIn="false" value="m"/>
									<listOptionValue builtIn="false" value="fftw3f"/>
									<listOptionValue builtIn="false" value="mpi"/>
								</option>
								<option id="llvm.c.link.base.option.ldflags.282098498" name="Linker flags" superClass="llvm.c.link.base.option.ldflags" value="-pthread -Wl,-rpath -Wl,/smithlab/opt/openmpi/414-clang1301/lib -Wl,--enable-new-dtags -fopenmp" valueType="string"/>
								<option id="llvm.c.link.option.verbose.1481201911" name="Verbose mode" superClass="llvm.c.link.option.verbose" value="false" valueType="boolean"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.932591321" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="config"/>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="core"/>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="gmxinterface"/>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="rosettainterface"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1969780310">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1969780310" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<macros>
					<stringMacro name="MPI_HOME" type="VALUE_TEXT" value="/smithlab/opt/openmpi/414-clang1301/"/>
				</macros>
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1969780310" name="Release" optionalBuildProperties="" parent="cdt.managedbuild.config.llvm.clang.linux.exe.release">
					<folderInfo id="cdt.managedbuild.config.llvm.clang.linux.exe.release.1969780310." name="/" resourcePath="">
						<toolChain id="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release.588513589" name="LLVM with Clang (Linux)" superClass="cdt.managedbuild.toolchain.llvm.clang.linux.exe.release">
							<targetPlatform archList="all" id="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release.1425277560" name="Debug Platform" osList="linux,hpux,aix,qnx" superClass="cdt.managedbuild.target.llvm.clang.linux.platform.exe.release"/>
							<builder buildPath="${workspace_loc:/ker-cpp}/Release" id="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release.349996848" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CDT Internal Builder" superClass="cdt.managedbuild.target.llvm.clang.linux.builder.exe.release"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release.697975083" name="LLVM assembler" superClass="cdt.managedbuild.tool.llvm.clang.linux.assembler.exe.release"/>
							<tool id="cdt.managedbuild.tool.llvm.archiver.base.1670562266" name="LLVM archiver" superClass="cdt.managedbuild.tool.llvm.archiver.base"/>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release.852149659" name="LLVM Clang" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.compiler.exe.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.952966524" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1187391171" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.compiler.input.758576507" superClass="cdt.managedbuild.tool.llvm.c.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release.1067906652" name="LLVM Clang++" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.compiler.exe.release">
								<option id="llvm.c_cpp.compiler.option.optimization.level.591112891" name="Optimization Level" superClass="llvm.c_cpp.compiler.option.optimization.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="llvm.c_cpp.compiler.option.debugging.level.1976671119" name="Debug Level" superClass="llvm.c_cpp.compiler.option.debugging.level" useByScannerDiscovery="false" value="llvm.c_cpp.compiler.debugging.level.none" valueType="enumerated"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="llvm.c_cpp.compiler.option.include.paths.257350580" name="Include paths (-I)" superClass="llvm.c_cpp.compiler.option.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/KENRef/fromgmx}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/KENRef/borrowedimports}&quot;"/>
								</option>
								<inputType id="cdt.managedbuild.tool.llvm.cpp.compiler.input.1214975109" superClass="cdt.managedbuild.tool.llvm.cpp.compiler.input"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release.2050601912" name="LLVM Clang C linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.c.linker.exe.release">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.98084391" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
							</tool>
							<tool id="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release.1294429198" name="LLVM Clang C++ linker" superClass="cdt.managedbuild.tool.llvm.clang.linux.cpp.linker.exe.release">
								<option defaultValue="false" id="llvm.c.link.option.nativeCBackEnd.881892159" name="Create native binary (with C backend code generator)" superClass="llvm.c.link.option.nativeCBackEnd" valueType="boolean"/>
								<inputType id="cdt.managedbuild.tool.llvm.c.linker.input.1704728039" superClass="cdt.managedbuild.tool.llvm.c.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="config"/>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="core"/>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="gmxinterface"/>
						<entry flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="rosettainterface"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="ker-cpp.cdt.managedbuild.target.llvm.clang.linux.exe.62218239" name="Executable" projectType="cdt.managedbuild.target.llvm.clang.linux.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope" versionNumber="2">
		<configuration configurationName="Debug">
			<resource resourceType="PROJECT" workspacePath="/ker-cpp"/>
		</configuration>
		<configuration configurationName="Release">
			<resource resourceType="PROJECT" workspacePath="/ker-cpp"/>
		</configuration>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
	<storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
</cproject>